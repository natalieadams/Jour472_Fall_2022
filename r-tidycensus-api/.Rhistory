setwd("~/Desktop/Jour472_Fall_2022/r-tidycensus-api")
getwd()
library(tidyverse)
library(tidycensus)
install.packages("tidycensus")
library(tidyverse)
library(tidycensus)
library(janitor)
census_api_key("ff882b59363896a990c1fc5bc221deb7276b68d9", install=TRUE)
pl_2020 <- load_variables(2020, "pl", cache = TRUE)
pl_2020
View(pl_2020)
total_pop_2020 <- get_decennial(geography="state", variables="P1_001N", year=2020)
census_api_key("ff882b59363896a990c1fc5bc221deb7276b68d9", install=TRUE)
install.packages("tidycensus")
View(pl_2020)
install.packages("tidycensus")
library(tidyverse)
library(tidycensus)
library(janitor)
census_api_key("ff882b59363896a990c1fc5bc221deb7276b68d9", install=TRUE)
pl_2020 <- load_variables(2020, "pl", cache = TRUE)
pl_2020
total_pop_2020 <- get_decennial(geography="state", variables="P1_001N", year=2020)
library(tidyverse)
library(tidycensus)
library(janitor)
census_api_key("ff882b59363896a990c1fc5bc221deb7276b68d9", install=TRUE)
total_pop_2020 <- get_decennial(geography="state", variables="P1_001N", year=2020)
pl_2020 <- load_variables(2020, "pl", cache = TRUE)
pl_2020
total_pop_2020 <- get_decennial(geography="state", variables="P1_001N", year=2020)
remotes::install_github("walkerke/tidycensus")
install.packages("tidycensus")
remotes::install_github("walkerke/tidycensus")
install.packages("tidycensus")
# install.packages("tidycensus")
remotes::install_github("walkerke/tidycensus")
# install.packages("tidycensus")
remotes::install_github("walkerke/tidycensus")
# install.packages("tidycensus")
install.packages("remotes")
remotes::install_github("walkerke/tidycensus")
library(tidyverse)
library(tidycensus)
library(tidyverse)
library(tidycensus)
library(janitor)
census_api_key("ff882b59363896a990c1fc5bc221deb7276b68d9", install=TRUE)
pl_2020 <- load_variables(2020, "pl", cache = TRUE)
pl_2020
total_pop_2020 <- get_decennial(geography="state", variables="P1_001N", year=2020)
# install.packages("tidycensus")
install.packages("remotes")
remotes::install_github("walkerke/tidycensus")
library(tidyverse)
library(tidycensus)
install.packages("remotes")
library(tidyverse)
library(tidycensus)
library(janitor)
census_api_key("ff882b59363896a990c1fc5bc221deb7276b68d9", install=TRUE)
pl_2020 <- load_variables(2020, "pl", cache = TRUE)
pl_2020
total_pop_2020 <- get_decennial(geography="state", variables="P1_001N", year=2020)
total_pop_2020 <- get_decennial(geography="state", variables="P1_001N", year=2020) %>%
arrange(desc(value))
md <- get_acs(geography = "county",
variables = c(median_income = "B19013_001"),
state = "MD",
year = 2020) %>%
arrange(desc(estimate))
census_api_key("ff882b59363896a990c1fc5bc221deb7276b68d9", install=TRUE)
# install.packages("tidycensus")
install.packages("remotes")
remotes::install_github("walkerke/tidycensus")
library(tidyverse)
library(tidycensus)
library(tidyverse)
library(tidycensus)
library(janitor)
census_api_key("ff882b59363896a990c1fc5bc221deb7276b68d9", install=TRUE)
total_pop_2020 <- get_decennial(geography="state", variables="P1_001N", year=2020)
total_pop_2020 <- get_decennial(geography="state", variables="P1_001N", year=2020) %>%
arrange(desc(value))
census_api_key("ff882b59363896a990c1fc5bc221deb7276b68d9", install=TRUE)
library(tidyverse)
library(tidycensus)
library(janitor)
census_api_key("ff882b59363896a990c1fc5bc221deb7276b68d9", install=TRUE)
census_api_key("ff882b59363896a990c1fc5bc221deb7276b68d9", install=TRUE, overwrite=TRUE)
remove.packages("tidycensus")
install.packages("tidycensus")
# install.packages("remotes")
# remotes::install_github("walkerke/tidycensus")
library(tidyverse)
library(tidycensus)
install.packages("tidycensus")
library(tidyverse)
library(tidycensus)
library(janitor)
census_api_key("ff882b59363896a990c1fc5bc221deb7276b68d9", install=TRUE, overwrite=TRUE)
pl_2020 <- load_variables(2020, "pl", cache = TRUE)
pl_2020
total_pop_2020 <- get_decennial(geography="state", variables="P1_001N", year=2020)
total_pop_2020
total_pop_2020 <- get_decennial(geography="state", variables="P1_001N", year=2020) %>%
arrange(desc(value))
total_pop_2020
total_pop_2020 <- get_decennial(geography="state", variables="P1_001N", year=2020) %>%
clean_names() %>%
arrange(desc(value)) %>%
rename(total_population = value,
state = name) %>%
select(state, total_population)
total_pop_2020
pct_white_2020 <- get_decennial(geography="us", variables=c("P1_001N","P1_003N"), year=2020)
pct_white_2020
pct_white_2020 <- get_decennial(geography="us", variables=c("P1_001N","P1_003N"), year=2020, output="wide")
pct_white_2020
pct_white_2020 <- get_decennial(geography="us", variables=c("P1_001N","P1_003N"), year=2020, output="wide") %>%
rename(geography = NAME,
total_pop = P1_001N,
white_pop = P1_003N) %>%
select(-GEOID)
pct_white_2020
pct_white_2020 <- get_decennial(geography="us", variables=c("P1_001N","P1_003N"), year=2020, output="wide") %>%
rename(geography = NAME,
total_pop = P1_001N,
white_pop = P1_003N) %>%
select(-GEOID) %>%
mutate(pct_white = white_pop/total_pop*100)
pct_white_2020
md <- get_acs(geography = "county",
variables = c(median_income = "B19013_001"),
state = "MD",
year = 2020) %>%
arrange(desc(estimate))
md
md %>%
mutate(NAME = gsub(" County, Maryland", "", NAME)) %>%
ggplot(aes(x = estimate, y = reorder(NAME, estimate))) +
geom_errorbarh(aes(xmin = estimate - moe, xmax = estimate + moe)) +
geom_point(color = "red") +
labs(title = "Household income by county in Maryland",
subtitle = "2015-2019 American Community Survey",
y = "",
x = "ACS estimate (bars represent margin of error)")
acs_variable <- load_variables(dataset = "acs5", year=2020)
View(acs_variable)
View(md)
male_pop <- get_acs(geography="state", variables="P1_001N", year=2020) %>%
arrange(desc(value))
male_pop <- get_acs(geography="state", variables="B01001_002", year=2020) %>%
arrange(desc(value))
male_pop <- get_acs(geography="state", variables="B01001_002", year=2020)
# pct_white_2020 <- get_decennial(geography="us", variables=c("P1_001N","P1_003N"), year=2020, output="wide")
#
# total_pop_2020 <- get_decennial(geography="state", variables="P1_001N", year=2020) %>%
#   clean_names() %>%
#   arrange(desc(value)) %>%
#   rename(total_population = value,
#          state = name) %>%
#   select(state, total_population)
#
# pct_white_2020 <- get_decennial(geography="us", variables=c("P1_001N","P1_003N"), year=2020, output="wide") %>%
#   rename(geography = NAME,
#          total_pop = P1_001N,
#          white_pop = P1_003N) %>%
#   select(-GEOID) %>%
#   mutate(pct_white = white_pop/total_pop*100)
View(male_pop)
male_pop <- get_acs(geography="state", variables="B01001_002", year=2020) %>%
arrange(desc(estimate))
# pct_white_2020 <- get_decennial(geography="us", variables=c("P1_001N","P1_003N"), year=2020, output="wide")
#
# total_pop_2020 <- get_decennial(geography="state", variables="P1_001N", year=2020) %>%
#   clean_names() %>%
#   arrange(desc(value)) %>%
#   rename(total_population = value,
#          state = name) %>%
#   select(state, total_population)
#
# pct_white_2020 <- get_decennial(geography="us", variables=c("P1_001N","P1_003N"), year=2020, output="wide") %>%
#   rename(geography = NAME,
#          total_pop = P1_001N,
#          white_pop = P1_003N) %>%
#   select(-GEOID) %>%
#   mutate(pct_white = white_pop/total_pop*100)
male_pop <- get_acs(geography="state", variables="B01001_002", year=2020) %>%
arrange(desc(estimate))
male_pop <- get_acs(geography="us", variables=c("B01001_001","B01001_002"), year=2020, output="wide")
# total_pop_2020 <- get_decennial(geography="state", variables="P1_001N", year=2020) %>%
#   clean_names() %>%
#   arrange(desc(value)) %>%
#   rename(total_population = value,
#          state = name) %>%
#   select(state, total_population)
#
# pct_white_2020 <- get_decennial(geography="us", variables=c("P1_001N","P1_003N"), year=2020, output="wide") %>%
#   rename(geography = NAME,
#          total_pop = P1_001N,
#          white_pop = P1_003N) %>%
#   select(-GEOID) %>%
#   mutate(pct_white = white_pop/total_pop*100)
male_pop <- get_acs(geography="state", variables="B01001_002", year=2020) %>%
arrange(desc(estimate))
male_pop_wide <- get_acs(geography="us", variables=c("B01001_001","B01001_002"), year=2020, output="wide")
# total_pop_2020 <- get_decennial(geography="state", variables="P1_001N", year=2020) %>%
#   clean_names() %>%
#   arrange(desc(value)) %>%
#   rename(total_population = value,
#          state = name) %>%
#   select(state, total_population)
#
# pct_white_2020 <- get_decennial(geography="us", variables=c("P1_001N","P1_003N"), year=2020, output="wide") %>%
#   rename(geography = NAME,
#          total_pop = P1_001N,
#          white_pop = P1_003N) %>%
#   select(-GEOID) %>%
#   mutate(pct_white = white_pop/total_pop*100)
View(male_pop_wide)
male_pop <- get_acs(geography="state", variables="B01001_002", year=2020) %>%
arrange(desc(estimate))
# male_pop_wide <- get_acs(geography="state", variables=c("B01001_001","B01001_002"), year=2020, output="wide")
male_pop_clean <- get_acs(geography="state", variables="B01001_002", year=2020) %>%
clean_names() %>%
arrange(desc(estimate)) %>%
rename(male_population = value,
state = NAME) %>%
select(state, male_population)
male_pop <- get_acs(geography="state", variables="B01001_002", year=2020) %>%
arrange(desc(estimate))
male_pop_wide <- get_acs(geography="state", variables=c("B01001_001","B01001_002"), year=2020, output="wide")
# male_pop_clean <- get_acs(geography="state", variables="B01001_002", year=2020) %>%
#   clean_names() %>%
#   arrange(desc(estimate)) %>%
#   rename(male_population = value,
#          state = NAME) %>%
#   select(state, male_population)
# pct_white_2020 <- get_decennial(geography="us", variables=c("P1_001N","P1_003N"), year=2020, output="wide") %>%
#   rename(geography = NAME,
#          total_pop = P1_001N,
#          white_pop = P1_003N) %>%
#   select(-GEOID) %>%
#   mutate(pct_white = white_pop/total_pop*100)
View(male_pop_wide)
male_pop <- get_acs(geography="state", variables="B01001_002", year=2020) %>%
arrange(desc(estimate))
male_pop_wide <- get_acs(geography="state", variables=c("B01001_001","B01001_002"), year=2020, output="wide")
male_pop_clean <- get_acs(geography="state", variables="B01001_002", year=2020) %>%
clean_names() %>%
arrange(desc(estimate)) %>%
rename(value = male_population,
NAME = state) %>%
select(state, male_population)
View(male_pop_wide)
male_pop <- get_acs(geography="state", variables="B01001_002", year=2020) %>%
arrange(desc(estimate))
male_pop_wide <- get_acs(geography="state", variables=c("B01001_001","B01001_002"), year=2020, output="wide") %>%
rename(B01001_001E = total_population,
B01001_002E = male_population,
NAME = state) %>%
select(state, total_population, male_population)
male_pop <- get_acs(geography="state", variables="B01001_002", year=2020) %>%
arrange(desc(estimate))
male_pop_wide <- get_acs(geography="state", variables=c("B01001_001E","B01001_002E"), year=2020, output="wide") %>%
rename(B01001_001E = total_population,
B01001_002E = male_population,
NAME = state) %>%
select(state, total_population, male_population)
male_pop <- get_acs(geography="state", variables="B01001_002", year=2020) %>%
arrange(desc(estimate))
male_pop_wide <- get_acs(geography="us", variables=c("B01001_001","B01001_002"), year=2020, output="wide") %>%
rename(B01001_001E = total_population,
B01001_002E = male_population,
NAME = state) %>%
select(state, total_population, male_population)
male_pop <- get_acs(geography="state", variables="B01001_002", year=2020) %>%
arrange(desc(estimate))
male_pop_wide <- get_acs(geography="us", variables=c("B01001_001","B01001_002"), year=2020, output="wide") %>%
rename(total_population = B01001_001E,
male_population = B01001_002E,
state = NAME) %>%
select(state, total_population, male_population)
# pct_white_2020 <- get_decennial(geography="us", variables=c("P1_001N","P1_003N"), year=2020, output="wide") %>%
#   rename(geography = NAME,
#          total_pop = P1_001N,
#          white_pop = P1_003N) %>%
#   select(-GEOID) %>%
#   mutate(pct_white = white_pop/total_pop*100)
male_pop <- get_acs(geography="state", variables="B01001_002", year=2020) %>%
arrange(desc(estimate))
male_pop_wide <- get_acs(geography="state", variables=c("B01001_001","B01001_002"), year=2020, output="wide") %>%
rename(total_population = B01001_001E,
male_population = B01001_002E,
state = NAME) %>%
select(state, total_population, male_population)
# pct_white_2020 <- get_decennial(geography="us", variables=c("P1_001N","P1_003N"), year=2020, output="wide") %>%
#   rename(geography = NAME,
#          total_pop = P1_001N,
#          white_pop = P1_003N) %>%
#   select(-GEOID) %>%
#   mutate(pct_white = white_pop/total_pop*100)
male_pop <- get_acs(geography="state", variables="B01001_002", year=2020) %>%
arrange(desc(estimate))
male_pop_wide <- get_acs(geography="state", variables=c("B01001_001","B01001_002"), year=2020, output="wide") %>%
rename(total_pop = B01001_001E,
male_pop = B01001_002E,
state = NAME) %>%
select(state, total_population, male_population) %>%
mutate(pct_male = male_pop/total_pop*100)
male_pop <- get_acs(geography="state", variables="B01001_002", year=2020) %>%
arrange(desc(estimate))
male_pop_wide <- get_acs(geography="state", variables=c("B01001_001","B01001_002"), year=2020, output="wide") %>%
rename(total_pop = B01001_001E,
male_pop = B01001_002E,
state = NAME) %>%
select(state, total_population, male_population)
male_pop <- get_acs(geography="state", variables="B01001_002", year=2020) %>%
arrange(desc(estimate))
male_pop_wide <- get_acs(geography="state", variables=c("B01001_001","B01001_002"), year=2020, output="wide") %>%
rename(total_pop = B01001_001E,
male_pop = B01001_002E,
state = NAME) %>%
select(state, total_pop, male_pop)
# pct_male <- get_acs(geography="state", variables=c("B01001_001","B01001_002"), year=2020, output="wide") %>%
#   rename(geography = NAME,
#          total_pop = P1_001N,
#          white_pop = P1_003N) %>%
#   select(-GEOID) %>%
#   mutate(pct_white = white_pop/total_pop*100)
male_pop <- get_acs(geography="state", variables="B01001_002", year=2020) %>%
arrange(desc(estimate))
male_pop_wide <- get_acs(geography="state", variables=c("B01001_001","B01001_002"), year=2020, output="wide") %>%
rename(total_pop = B01001_001E,
male_pop = B01001_002E,
state = NAME) %>%
select(state, total_pop, male_pop) %>%
mutate(pct_male = male_pop/total_pop*100)
# pct_male <- get_acs(geography="state", variables=c("B01001_001","B01001_002"), year=2020, output="wide") %>%
#   rename(geography = NAME,
#          total_pop = P1_001N,
#          white_pop = P1_003N) %>%
#   select(-GEOID) %>%
#   mutate(pct_white = white_pop/total_pop*100)
male_pop <- get_acs(geography="state", variables="B01001_002", year=2020) %>%
arrange(desc(estimate))
male_pop_wide <- get_acs(geography="state", variables=c("B01001_001","B01001_002"), year=2020, output="wide") %>%
rename(total_pop = B01001_001E,
male_pop = B01001_002E,
state = NAME) %>%
select(state, total_pop, male_pop) %>%
mutate(pct_male = male_pop/total_pop*100) %>%
arrange(desc(pct_male))
# pct_male <- get_acs(geography="state", variables=c("B01001_001","B01001_002"), year=2020, output="wide") %>%
#   rename(geography = NAME,
#          total_pop = P1_001N,
#          white_pop = P1_003N) %>%
#   select(-GEOID) %>%
#   mutate(pct_white = white_pop/total_pop*100)
# male_pop <- get_acs(geography="state", variables="B01001_002", year=2020) %>%
#   arrange(desc(estimate))
male_pop_wide <- get_acs(geography="state", variables=c("B01001_001","B01001_002"), year=2020, output="wide") %>%
rename(total_pop = B01001_001E,
male_pop = B01001_002E,
state = NAME) %>%
select(state, total_pop, male_pop) %>%
mutate(pct_male = male_pop/total_pop*100) %>%
arrange(desc(pct_male))
male_pop_wide <- get_acs(geography="state", variables=c("B01001_001","B01001_002"), year=2020, output="wide") %>%
rename(total_pop = B01001_001E,
male_pop = B01001_002E,
state = NAME) %>%
select(state, total_pop, male_pop) %>%
mutate(pct_male = male_pop/total_pop*100) %>%
arrange(desc(pct_male))
male_pop <- get_acs(geography="state", variables=c("B01001_001","B01001_002"), year=2020, output="wide") %>%
rename(total_pop = B01001_001E,
male_pop = B01001_002E,
state = NAME) %>%
select(state, total_pop, male_pop) %>%
mutate(pct_male = male_pop/total_pop*100) %>%
arrange(desc(pct_male))
View(male_pop)
male_pop <- get_acs(geography="state", variables=c("B01001_001","B01001_002"), year=2020, output="wide") %>%
rename(total_pop = B01001_001E,
male_pop = B01001_002E,
state = NAME) %>%
select(state, total_pop, male_pop) %>%
mutate(pct_male = male_pop/total_pop*100) %>%
arrange(desc(pct_male))
male_pop <- get_acs(geography="state", variables=c("B01001_001","B01001_002"), year=2020, output="wide") %>%
rename(total_pop = B01001_001E,
male_pop = B01001_002E,
state = NAME) %>%
select(state, total_pop, male_pop) %>%
mutate(pct_male = male_pop/total_pop*100) %>%
arrange(desc(pct_male))
View(male_pop)
setwd("~/Desktop/Jour472_Fall_2022/r-tidycensus-api")
getwd()
