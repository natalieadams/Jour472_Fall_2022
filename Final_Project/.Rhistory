# turn off scientific notation
options(scipen=999)
# load janitor and tidyverse
library(janitor)
library(tidyverse)
# library(ggplot2)
# food stores in maryland
stores <- read.csv("food_stores.csv")
# median household income by baltimore neighborhood
income <- read.csv("median_household_income.csv")
# total population by baltimore neighborhood
total_pop1 <- read.csv("total_population.csv")
# white population by baltimore neighborhood
percent_white1 <- read.csv("percent_white.csv")
# black population by baltimore neighborhood
percent_black1 <- read.csv("percent_black.csv")
# hispanic population by baltimore neighborhood
percent_hispanic1 <- read.csv("percent_hispanic.csv")
# asian population by baltimore neighborhood
percent_asian1 <- read.csv("percent_asian.csv")
# other race population by baltimore neighborhood
percent_other1 <- read.csv("percent_other.csv")
# two or more races population by baltimore neighborhood
percent_more1 <- read.csv("percent_two_or_more.csv")
# total population by baltimore neighborhood clean
total_pop2 <- total_pop1 %>%
select(CSA2010, tpop20) %>%
clean_names() %>%
rename(neighborhood = 1, total_pop_2020 = 2)
# white population by baltimore neighborhood clean
percent_white2 <- percent_white1 %>%
select(CSA2010, pwhite20) %>%
clean_names() %>%
rename(neighborhood = 1, percent_white = 2)
# black population by baltimore neighborhood clean
percent_black2 <- percent_black1 %>%
select(CSA2010, paa20) %>%
clean_names() %>%
rename(neighborhood = 1, percent_black = 2)
# hispanic population by baltimore neighborhood clean
percent_hispanic2 <- percent_hispanic1 %>%
select(CSA2010, phisp20) %>%
clean_names() %>%
rename(neighborhood = 1, percent_hispanic = 2)
# asian population by baltimore neighborhood clean
percent_asian2 <- percent_asian1 %>%
select(CSA2010, pasi20) %>%
clean_names() %>%
rename(neighborhood = 1, percent_asian = 2)
# other race population by baltimore neighborhood clean
percent_other2 <- percent_other1 %>%
select(CSA2010, ppac20) %>%
clean_names() %>%
rename(neighborhood = 1, percent_other = 2)
# two or more races population by baltimore neighborhood clean
percent_more2 <- percent_more1 %>%
select(CSA2010, p2more20) %>%
clean_names() %>%
rename(neighborhood = 1, percent_two_or_more = 2)
# total baltimore population by race and baltimore neighborhood clean
baltimore_population <- total_pop2 %>%
inner_join(percent_white2, by="neighborhood") %>%
inner_join(percent_black2, by="neighborhood") %>%
inner_join(percent_hispanic2, by="neighborhood") %>%
inner_join(percent_asian2, by="neighborhood") %>%
inner_join(percent_other2, by="neighborhood") %>%
inner_join(percent_more2, by="neighborhood")
# baltimore stores
baltimore_stores <- stores %>%
select(Main_Categ, Company_Na, County, Address, ZIP_Code, X, Y) %>%
filter(County == "Baltimore City") %>%
clean_names() %>%
rename(store_type = 1, name = 2)
# food stores in maryland
stores <- read.csv("food_stores.csv")
# median household income by baltimore neighborhood
income <- read.csv("median_household_income.csv")
# total population by baltimore neighborhood
total_pop1 <- read.csv("total_population.csv")
# white population by baltimore neighborhood
percent_white1 <- read.csv("percent_white.csv")
# black population by baltimore neighborhood
percent_black1 <- read.csv("percent_black.csv")
# hispanic population by baltimore neighborhood
percent_hispanic1 <- read.csv("percent_hispanic.csv")
# asian population by baltimore neighborhood
percent_asian1 <- read.csv("percent_asian.csv")
# other race population by baltimore neighborhood
percent_other1 <- read.csv("percent_other.csv")
# two or more races population by baltimore neighborhood
percent_more1 <- read.csv("percent_two_or_more.csv")
# baltimore stores
baltimore_stores <- stores %>%
select(Main_Categ, Company_Na, County, Address, ZIP_Code, X, Y) %>%
filter(County == "Baltimore City") %>%
clean_names() %>%
rename(store_type = 1, name = 2)
# baltimore supermarkets
supermarkets <- baltimore_stores %>%
filter(store_type == "Supermarket")
# baltimore small grocery stores
small_grocery <- baltimore_stores %>%
filter(store_type == "Small Grocery/Corner Store")
# baltimore convenience stores
convenience_stores <- baltimore_stores %>%
filter(store_type == "Convenience Store")
# median household income by baltimore neighborhood clean
baltimore_income <- income %>%
select(CSA2020, mhhi20) %>%
clean_names() %>%
rename(neighborhood = 1, median_income = 2)
View(baltimore_income)
baltimore_income %>%
mutate(
income_level = case_when(
median_income < 67521 ~ "low_income",
median_income >= 67521 ~ "high_income"
)
View(baltimore_income)
baltimore_income <- baltimore_income %>%
mutate(
income_level = case_when(
median_income < 67521 ~ "low_income",
median_income >= 67521 ~ "high_income"
)
View(baltimore_income)
baltimore_income <- baltimore_income %>%
mutate(
income_level = case_when(
median_income < 67521 ~ "low",
median_income >= 67521 ~ "high"
)
baltimore_income <- baltimore_income %>%
mutate(
income_level = case_when(
median_income < 67521 ~ "low",
median_income >= 67521 ~ "high"
)
high_income <- baltimore_income %>%
filter(income_level == "high")
View(high_income)
baltimore_income <- baltimore_income %>%
mutate(
income_level = case_when(
median_income < 67521 ~ "low",
median_income >= 67521 ~ "high"
)
high_income <- baltimore_income %>%
filter(income_level == "high")
low_income <- baltimore_income %>%
filter(income_level == "low")
View(low_income)
baltimore_income <- baltimore_income %>%
mutate(
income_level = case_when(
median_income < 64994 ~ "low",
median_income >= 64994 ~ "high"
)
high_income <- baltimore_income %>%
filter(income_level == "high")
low_income <- baltimore_income %>%
filter(income_level == "low")
baltimore_income <- baltimore_income %>%
mutate(
income_level = case_when(
median_income < 52164 ~ "low",
median_income >= 52164 ~ "high"
)
high_income <- baltimore_income %>%
filter(income_level == "high")
low_income <- baltimore_income %>%
filter(income_level == "low")
View(baltimore_stores)
View(stores)
View(income)
View(supermarkets)
# turn off scientific notation
options(scipen=999)
# load janitor and tidyverse
library(janitor)
library(tidyverse)
library(sf)
library(leaflet)
# library(ggplot2)
setwd("~/Desktop/Jour472_Fall_2022/Final_Project")
getwd()
test <- supermarkets %>%
st_as_sf(coords = c("x", "y")) %>%
st_join(read_sf("median_household_income.shp"))
# food stores in maryland
stores <- read.csv("food_stores.csv")
# median household income by baltimore neighborhood
income <- read.csv("median_household_income.csv")
neighborhoods <- st_read("median_household_income.shp")
# food stores in maryland
stores <- read.csv("food_stores.csv")
# median household income by baltimore neighborhood
income <- read.csv("median_household_income.csv")
neighborhoods <- st_read("income_shapefiles/median_household_income.shp")
# total population by baltimore neighborhood
total_pop1 <- read.csv("total_population.csv")
# white population by baltimore neighborhood
percent_white1 <- read.csv("percent_white.csv")
# black population by baltimore neighborhood
percent_black1 <- read.csv("percent_black.csv")
# hispanic population by baltimore neighborhood
percent_hispanic1 <- read.csv("percent_hispanic.csv")
# asian population by baltimore neighborhood
percent_asian1 <- read.csv("percent_asian.csv")
# other race population by baltimore neighborhood
percent_other1 <- read.csv("percent_other.csv")
# two or more races population by baltimore neighborhood
percent_more1 <- read.csv("percent_two_or_more.csv")
View(neighborhoods)
# food stores in maryland
stores <- read.csv("food_stores.csv")
# median household income by baltimore neighborhood
income <- read.csv("median_household_income.csv")
# neighborhoods <- st_read("income_shapefiles/median_household_income.shp")
# total population by baltimore neighborhood
total_pop1 <- read.csv("total_population.csv")
# white population by baltimore neighborhood
percent_white1 <- read.csv("percent_white.csv")
# black population by baltimore neighborhood
percent_black1 <- read.csv("percent_black.csv")
# hispanic population by baltimore neighborhood
percent_hispanic1 <- read.csv("percent_hispanic.csv")
# asian population by baltimore neighborhood
percent_asian1 <- read.csv("percent_asian.csv")
# other race population by baltimore neighborhood
percent_other1 <- read.csv("percent_other.csv")
# two or more races population by baltimore neighborhood
percent_more1 <- read.csv("percent_two_or_more.csv")
test <- supermarkets %>%
st_as_sf(coords = c("x", "y")) %>%
st_join(read_sf("income_shapefiles/median_household_income.shp"))
test <- supermarkets %>%
st_join(read_sf("income_shapefiles/median_household_income.shp"))
test <- supermarkets %>%
st_join(neighborhoods)
View(neighborhoods)
View(supermarkets)
View(neighborhoods)
View(baltimore_income)
View(baltimore_stores)
supermarkets %>%
st_join(neighborhoods)
pg_elementary_school_locations <- read_rds("assets/data/pg_elementary_school_locations.rds")
pg_elementary_school_locations
View(pg_elementary_school_locations)
# supermarkets %>%
#   st_join(neighborhoods)
#
# read_csv("my_points.csv") %>%
#   st_as_sf(coords = c("long", "lat")) %>%  # convert dataset to geographical object using the location variables
#   st_join(read_sf("districts.shp"))
supermarkets <- supermarkets %>%
unite('geometry', x:y, remove = FALSE)
# supermarkets <- supermarkets %>%
#     mutate(
#       long = unlist(map(df$geometry,1)),
#            lat = unlist(map(df$geometry,2)))
View(supermarkets)
saveRDS(supermarkets, "supermarkets.rds")
supermarketsrds <- read_rds("supermarkets.rds")
View(supermarketsrds)
saveRDS(supermarkets, "supermarkets.rds")
supermarketsrds <- read_rds("supermarkets.rds")
supermarketsrds %>%
st_join(neighborhoods)
saveRDS(supermarkets, "supermarkets.rds")
supermarketsrds <- read_rds("supermarkets.rds")
ggplot() +
geom_sf(data=supermarkets) +
geom_sf(data=neighborhoods)
###
# Load dataframe of washington homicides
###
washington_homicides <- read_rds("assets/data/washington_homicides.rds")
###
# Load dataframe of washington schools
###
washington_schools <- read_rds("assets/data/washington_schools.rds")
###
# Load outline of DC
###
washington_shapefile <- read_rds("assets/data/washington_shapefile.rds")
View(washington_shapefile)
neighborhoods <- neighborhoods %>%
select(CSA2020, geometry) %>%
clean_names() %>%
rename(neighborhood = 1)
View(supermarkets)
saveRDS(supermarkets, "supermarkets.rds")
supermarketsrds <- read_rds("supermarkets.rds")
ggplot()+
geom_sf(data=neighborhoods)+
geom_sf(data=supermarkets %>% st_as_sf(coords = c("x", "y"), crs = 4326))+
theme_minimal()
saveRDS(supermarkets, "supermarkets.rds")
supermarketsrds <- read_rds("supermarkets.rds")
ggplot()+
geom_sf(data=neighborhoods)+
geom_sf(data=supermarkets %>% st_as_sf(coords = c("x", "y")))+
theme_minimal()
saveRDS(supermarkets, "supermarkets.rds")
supermarketsrds <- read_rds("supermarkets.rds")
ggplot()+
geom_sf(data=neighborhoods)+
geom_sf(data=supermarkets %>% st_as_sf(coords = c("x", "y"), crs = 4326))+
theme_minimal()
ggplot()+
geom_sf(data=neighborhoods)+
geom_sf(data=supermarkets %>% st_as_sf(coords = c("x", "y"), crs = 4326))+
theme_minimal()
View(supermarkets)
# turn off scientific notation
options(scipen=999)
# load janitor and tidyverse
library(janitor)
library(tidyverse)
library(sf)
library(leaflet)
library(magrittr)
# library(ggplot2)
# turn off scientific notation
options(scipen=999)
# load janitor and tidyverse
library(janitor)
library(tidyverse)
library(sf)
library(leaflet)
library(magrittr)
# library(ggplot2)
allendale_irvington_s.hiltons <- neighborhoods %>% filter(name_id=="Allendale/Irvington/S. Hilton") %$% geometry
allendale_irvington_s.hiltons <- neighborhoods %>% filter(neighborhood=="Allendale/Irvington/S. Hilton") %$% geometry
# quebecPolygons <- provinceData %>% filter(name_id=="Quebec") %$% geometry
#
# newBrunswickPolygons<-provinceData %>% filter(name_id=="New Brunswick") %$% geometry
View(allendale_irvington_s.hiltons)
allendale_irvington_s.hiltons <- neighborhoods %>% filter(neighborhood=="Allendale/Irvington/S. Hilton") %$% geometry
allendale_irvington_s.hiltons_supermarket <- supermarkets %>%
st_as_sf(coords = c("x", "y"), crs = 4326) %$% geometry %>%
st_intersects(allendale_irvington_s.hiltons) %>%
lapply(function(x) ifelse(length(x)==0,FALSE,TRUE)) %>%
unlist()
ggplot()+
geom_sf(data=neighborhoods)+
geom_sf(data=small_grocery %>% st_as_sf(coords = c("x", "y"), crs = 4326))+
theme_minimal()
ggplot()+
geom_sf(data=neighborhoods)+
geom_sf(data=convenience_stores %>% st_as_sf(coords = c("x", "y"), crs = 4326))+
theme_minimal()
View(low_income)
low_income <- low_income %>%
inner_join(neighborhoods, by="neighborhood")
# adding shapefile data to high income neighborhoods data
high_income <- high_income %>%
inner_join(neighborhoods, by="neighborhood")
View(high_income)
# classify income as high or low
baltimore_income <- baltimore_income %>%
mutate(
income_level = case_when(
median_income < 52164 ~ "low",
median_income >= 52164 ~ "high"
)
# filter for high income neighborhoods
high_income <- baltimore_income %>%
filter(income_level == "high")
# filter for low income neighborhoods
low_income <- baltimore_income %>%
filter(income_level == "low")
# adding shapefile data to low income neighborhoods data
low_income <- low_income %>%
inner_join(neighborhoods, by="neighborhood")
# adding shapefile data to high income neighborhoods data
high_income <- high_income %>%
inner_join(neighborhoods, by="neighborhood")
# classify income as high or low
baltimore_income <- baltimore_income %>%
mutate(
income_level = case_when(
median_income < 52164 ~ "low",
median_income >= 52164 ~ "high"
)
# filter for high income neighborhoods
high_income <- baltimore_income %>%
filter(income_level == "high") %>%
inner_join(neighborhoods, by="neighborhood")
# filter for low income neighborhoods
low_income <- baltimore_income %>%
filter(income_level == "low") %>%
inner_join(neighborhoods, by="neighborhood")
View(supermarkets)
# baltimore stores
baltimore_stores <- stores %>%
select(Main_Categ, Company_Na, County, Address, ZIP_Code, X, Y) %>%
filter(County == "Baltimore City") %>%
clean_names() %>%
rename(store_type = 1, name = 2)
# baltimore supermarkets
supermarkets <- baltimore_stores %>%
filter(store_type == "Supermarket")
# baltimore small grocery stores
small_grocery <- baltimore_stores %>%
filter(store_type == "Small Grocery/Corner Store")
# baltimore convenience stores
convenience_stores <- baltimore_stores %>%
filter(store_type == "Convenience Store")
supermarkets_low_income <- supermarkets %>%
st_as_sf(coords = c("x", "y"), crs = 4326) %$% geometry %>%
st_intersects(low_income) %>%
lapply(function(x) ifelse(length(x)==0,FALSE,TRUE)) %>%
unlist()
supermarkets_low_income <- supermarkets %>%
st_as_sf(coords = c("x", "y"), crs = 4326) %>%
st_intersects(low_income) %>%
lapply(function(x) ifelse(length(x)==0,FALSE,TRUE)) %>%
unlist()
supermarkets_low_income <- supermarkets %>%
st_as_sf(coords = c("x", "y"), crs = 4326) %>%
st_intersects(low_income)
supermarkets_low_income <- supermarkets %>%
geom_sf(data=supermarkets %>%
st_as_sf(coords = c("x", "y"), crs = 4326) %>%
st_intersects(low_income)
# lapply(function(x) ifelse(length(x)==0,FALSE,TRUE)) %>%
# unlist()
# supermarkets_low_income <- supermarkets %>%
#   st_as_sf(coords = c("x", "y"), crs = 4326) %>%
#   st_intersects(low_income)
#   # lapply(function(x) ifelse(length(x)==0,FALSE,TRUE)) %>%
#   # unlist()
supermarkets_low_income <- supermarkets %>%
st_join(low_income, left="FALSE")
# supermarkets_low_income <- supermarkets %>%
#   st_as_sf(coords = c("x", "y"), crs = 4326) %>%
#   st_intersects(low_income)
#   # lapply(function(x) ifelse(length(x)==0,FALSE,TRUE)) %>%
#   # unlist()
supermarkets_low_income <- supermarkets %>%
left_join(low_income, left="FALSE")
# supermarkets_low_income <- supermarkets %>%
#   st_as_sf(coords = c("x", "y"), crs = 4326) %>%
#   st_intersects(low_income)
#   # lapply(function(x) ifelse(length(x)==0,FALSE,TRUE)) %>%
#   # unlist()
supermarkets_low_income <- supermarkets %>%
inner_join(low_income, left="FALSE")
# supermarkets_low_income <- supermarkets %>%
#   st_as_sf(coords = c("x", "y"), crs = 4326) %>%
#   st_intersects(low_income)
#   # lapply(function(x) ifelse(length(x)==0,FALSE,TRUE)) %>%
#   # unlist()
supermarkets_low_income <- supermarkets %>%
left_join(low_income, left="FALSE")
