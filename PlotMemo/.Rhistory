geom_smooth(method="loess", se=F) +
xlim(c(0, 135000)) +
ylim(c(0, 135)) +
labs(subtitle="Area Vs Population",
y="Population",
x="Area",
title="Scatterplot",
caption = "Source: midwest")
plot(gg)
gg <- ggplot(main, aes(x=mhhi20, y=crime20)) +
geom_point(aes(col=mhhi20, size=crime20)) +
geom_smooth(method="loess", se=F) +
xlim(c(0, 135000)) +
ylim(c(0, 135)) +
labs(subtitle="Area Vs Population",
y="Population",
x="Area",
title="Scatterplot",
caption = "Source: midwest")
plot(gg)
gg <- ggplot(main, aes(x=mhhi20, y=crime20)) +
geom_point(aes(col=mhhi20, size=crime20)) +
geom_smooth(method="loess", se=F) +
xlim(c(0, 135000)) +
ylim(c(0, 135)) +
labs(subtitle="Area Vs Population",
y="Crime Rate",
x="Median Household Income",
title="Scatterplot",
caption = "Source: midwest")
plot(gg)
gg <- ggplot(main, aes(x=mhhi20, y=crime20)) +
geom_point(aes(col=mhhi20)) +
geom_smooth(method="loess", se=F) +
xlim(c(0, 135000)) +
ylim(c(0, 135)) +
labs(subtitle="Area Vs Population",
y="Crime Rate",
x="Median Household Income",
title="Scatterplot",
caption = "Source: midwest")
plot(gg)
gg <- ggplot(main, aes(x=mhhi20, y=crime20)) +
geom_point(aes(col=mhhi20)) +
geom_smooth(method="loess", se=F) +
xlim(c(0, 135000)) +
ylim(c(0, 135)) +
labs(subtitle="Baltimore, Maryland 2020",
y="Crime Rate",
x="Median Household Income",
title="Correlation Between Income and Crime",
caption = "Source: midwest")
plot(gg)
gg <- ggplot(main, aes(x=mhhi20, y=crime20)) +
geom_point(aes(col=mhhi20)) +
geom_smooth(method="loess", se=F) +
xlim(c(0, 135000)) +
ylim(c(0, 135)) +
labs(subtitle="Baltimore, Maryland 2020",
y="Crime Rate",
x="Median Household Income",
title="Correlation Between Income and Crime",
caption = "Graphic by Natalie Adams")
plot(gg)
gg <- ggplot(main, aes(x=mhhi20, y=crime20)) +
geom_point(aes(col=mhhi20)) +
geom_smooth(method="loess", se=F) +
xlim(c(0, 135000)) +
ylim(c(0, 135)) +
labs(subtitle="Baltimore, Maryland 2020",
y="Crime Rate",
x="Median Household Income",
title="Correlation Between Income and Crime Rate",
caption = "Graphic by Natalie Adams")
plot(gg)
cor(main$mhhi20, main$crime20)
View(med_income)
View(crime)
View(med_income_2010)
View(crime_2020)
View(low_income15_high_crime15)
View(test2)
View(main)
View(low_income_high_crime)
View(low_income_low_crime)
View(high_income_high_crime)
View(high_income_low_crime)
# Turn off scientific notation
options(scipen=999)
# Load the tidyverse and janitor
library(tidyverse)
# library(rvest)
library(janitor)
library(ggplot2)
med_income <- read_csv("Median_Household_Income.csv")
crime <- read_csv("Crime_Rate.csv")
View(med_income)
med_income_2020 <- med_income %>%
select(CSA2020, mhhi20) %>%
arrange(desc(mhhi20)) %>%
slice_min(mhhi20, n=15)
crime_2020 <- crime %>%
select(CSA2020, crime20) %>%
arrange(desc(crime20)) %>%
slice_max(crime20, n=15)
low_income15_high_crime15 <- cbind.data.frame(med_income_2020, crime_2020)
low_income15_high_crime15 <- janitor::clean_names(low_income15_high_crime15)
# Median household income for Baltimore neighborhoods in 2020
med_income_2020 <- med_income %>%
select(CSA2020, mhhi20) %>%
arrange(desc(mhhi20)) %>%
slice_min(mhhi20, n=15)
# Crime rate for Baltimore neighborhoods in 2020
crime_2020 <- crime %>%
select(CSA2020, crime20) %>%
arrange(desc(crime20)) %>%
slice_max(crime20, n=15)
low_income15_high_crime15 <- cbind.data.frame(med_income_2020, crime_2020)
low_income15_high_crime15 <- janitor::clean_names(low_income15_high_crime15)
View(crime_2020)
View(med_income_2020)
View(crime_2020)
# 15 neighborhoods with the lowest median household income  in 2020
med_income_2020 <- med_income %>%
select(CSA2020, mhhi20) %>%
arrange(desc(mhhi20)) %>%
slice_min(mhhi20, n=15)
# 15 neighborhoods with the highest crime rate in 2020
crime_2020 <- crime %>%
select(CSA2020, crime20) %>%
arrange(desc(crime20)) %>%
slice_max(crime20, n=15)
#
# low_income15_high_crime15 <- cbind.data.frame(med_income_2020, crime_2020)
# low_income15_high_crime15 <- janitor::clean_names(low_income15_high_crime15)
low_income15_high_crime15 <- med_income_2020 %>%
inner_join(crime_2020, by="csa2020")
# 15 neighborhoods with the lowest median household income  in 2020
med_income_2020 <- med_income %>%
select(CSA2020, mhhi20) %>%
arrange(desc(mhhi20)) %>%
slice_min(mhhi20, n=15)
# 15 neighborhoods with the highest crime rate in 2020
crime_2020 <- crime %>%
select(CSA2020, crime20) %>%
arrange(desc(crime20)) %>%
slice_max(crime20, n=15)
#
# low_income15_high_crime15 <- cbind.data.frame(med_income_2020, crime_2020)
# low_income15_high_crime15 <- janitor::clean_names(low_income15_high_crime15)
low_income15_high_crime15 <- med_income_2020 %>%
inner_join(crime_2020, by="CSA2020")
View(low_income15_high_crime15)
View(med_income)
# 15 neighborhoods with the lowest median household income  in 2020
med_income_2020 <- med_income %>%
select(CSA2020, mhhi20) %>%
arrange(desc(mhhi20)) %>%
slice_min(mhhi20, n=15)
# 15 neighborhoods with the highest crime rate in 2020
crime_2020 <- crime %>%
select(CSA2020, crime20) %>%
arrange(desc(crime20)) %>%
slice_max(crime20, n=15)
#
# low_income15_high_crime15 <- cbind.data.frame(med_income_2020, crime_2020)
# low_income15_high_crime15 <- janitor::clean_names(low_income15_high_crime15)
top_low_income_high_crime <- med_income_2020 %>%
inner_join(crime_2020, by="CSA2020")
View(top_low_income_high_crime)
#
test <- cbind.data.frame(med_income, crime)
test <- janitor::clean_names(test)
test2 <- test %>%
select(csa2020, mhhi20, crime20)
main <- test2 %>%
mutate(
income_level = case_when(
mhhi20 < 67521 ~ "low_income",
mhhi20 >= 67521 ~ "high_income"
)
) %>%
mutate(
crime_level = case_when(
crime20 <= 47.7 ~ "low_crime",
crime20 > 47.7 ~ "high_crime"
)
low_income_high_crime <- main %>%
filter(income_level == "low_income") %>%
filter(crime_level == "high_crime")
low_income_low_crime <- main %>%
filter(income_level == "low_income") %>%
filter(crime_level == "low_crime")
high_income_high_crime <- main %>%
filter(income_level == "high_income") %>%
filter(crime_level == "high_crime")
high_income_low_crime <- main %>%
filter(income_level == "high_income") %>%
filter(crime_level == "low_crime")
View(test)
#
test <- cbind.data.frame(med_income, crime)
test <- janitor::clean_names(test) %>%
select(csa2020, mhhi20, crime20)
# test2 <- test %>%
# select(csa2020, mhhi20, crime20)
main <- test2 %>%
mutate(
income_level = case_when(
mhhi20 < 67521 ~ "low_income",
mhhi20 >= 67521 ~ "high_income"
)
) %>%
mutate(
crime_level = case_when(
crime20 <= 47.7 ~ "low_crime",
crime20 > 47.7 ~ "high_crime"
)
low_income_high_crime <- main %>%
filter(income_level == "low_income") %>%
filter(crime_level == "high_crime")
low_income_low_crime <- main %>%
filter(income_level == "low_income") %>%
filter(crime_level == "low_crime")
high_income_high_crime <- main %>%
filter(income_level == "high_income") %>%
filter(crime_level == "high_crime")
high_income_low_crime <- main %>%
filter(income_level == "high_income") %>%
filter(crime_level == "low_crime")
View(test)
#
test <- cbind.data.frame(med_income, crime)
test <- janitor::clean_names(test) %>%
select(csa2020, mhhi20, crime20)
# test2 <- test %>%
# select(csa2020, mhhi20, crime20)
main <- test %>%
mutate(
income_level = case_when(
mhhi20 < 67521 ~ "low_income",
mhhi20 >= 67521 ~ "high_income"
)
) %>%
mutate(
crime_level = case_when(
crime20 <= 47.7 ~ "low_crime",
crime20 > 47.7 ~ "high_crime"
)
low_income_high_crime <- main %>%
filter(income_level == "low_income") %>%
filter(crime_level == "high_crime")
low_income_low_crime <- main %>%
filter(income_level == "low_income") %>%
filter(crime_level == "low_crime")
high_income_high_crime <- main %>%
filter(income_level == "high_income") %>%
filter(crime_level == "high_crime")
high_income_low_crime <- main %>%
filter(income_level == "high_income") %>%
filter(crime_level == "low_crime")
View(main)
# joining and cleaning tables
test <- cbind.data.frame(med_income, crime)
test <- janitor::clean_names(test) %>%
select(csa2020, mhhi20, crime20)
# master table with all of the neighborhoods, median household incomes and crime rates for 2020 and a label of high or low income and high or low crime for each neighborhood
main <- test %>%
mutate(
income_level = case_when(
mhhi20 < 67521 ~ "low_income",
mhhi20 >= 67521 ~ "high_income"
)
) %>%
mutate(
crime_level = case_when(
crime20 < 47.7 ~ "low_crime",
crime20 >= 47.7 ~ "high_crime"
)
low_income_high_crime <- main %>%
filter(income_level == "low_income") %>%
filter(crime_level == "high_crime")
low_income_low_crime <- main %>%
filter(income_level == "low_income") %>%
filter(crime_level == "low_crime")
high_income_high_crime <- main %>%
filter(income_level == "high_income") %>%
filter(crime_level == "high_crime")
high_income_low_crime <- main %>%
filter(income_level == "high_income") %>%
filter(crime_level == "low_crime")
View(test)
View(low_income15_high_crime15)
View(low_income_low_crime)
gg <- ggplot(main, aes(x=mhhi20, y=crime20)) +
geom_point(aes(col=mhhi20)) +
geom_smooth(method="loess", se=F) +
xlim(c(0, 135000)) +
ylim(c(0, 135)) +
labs(subtitle="Baltimore, Maryland 2020",
y="Crime Rate",
x="Median Household Income",
title="Correlation Between Income and Crime Rate",
caption = "Graphic by Natalie Adams")
plot(gg)
# scatterplot of median household income data and crime rates for Baltimore neighborhoods in 2020
gg <- ggplot(main, aes(x=mhhi20, y=crime20)) +
geom_point(aes(col=mhhi20 =="median household income")) +
geom_smooth(method="loess", se=F) +
xlim(c(0, 135000)) +
ylim(c(0, 135)) +
labs(subtitle="Baltimore, Maryland 2020",
y="Crime Rate",
x="Median Household Income",
title="Correlation Between Income and Crime Rate",
caption = "Graphic by Natalie Adams")
plot(gg)
# scatterplot of median household income data and crime rates for Baltimore neighborhoods in 2020
gg <- ggplot(main, aes(x=mhhi20, y=crime20)) +
geom_point(aes(col=mhhi20)) +
geom_smooth(method="loess", se=F) +
xlim(c(0, 135000)) +
ylim(c(0, 135)) +
labs(subtitle="Baltimore, Maryland 2020",
y="Crime Rate",
x="Median Household Income",
title="Correlation Between Income and Crime Rate",
caption = "Graphic by Natalie Adams")
plot(gg)
# scatterplot of median household income data and crime rates for Baltimore neighborhoods in 2020
gg <- ggplot(main, aes(x=mhhi20, y=crime20)) +
# geom_point(aes(col=mhhi20)) +
geom_smooth(method="loess", se=F) +
xlim(c(0, 135000)) +
ylim(c(0, 135)) +
labs(subtitle="Baltimore, Maryland 2020",
y="Crime Rate",
x="Median Household Income",
title="Correlation Between Income and Crime Rate",
caption = "Graphic by Natalie Adams")
plot(gg)
# scatterplot of median household income data and crime rates for Baltimore neighborhoods in 2020
gg <- ggplot(main, aes(x=mhhi20, y=crime20)) +
geom_point(aes(col=mhhi20)) +
geom_smooth(method="loess", se=F) +
xlim(c(0, 135000)) +
ylim(c(0, 135)) +
labs(subtitle="Baltimore, Maryland 2020",
y="Crime Rate",
x="Median Household Income",
title="Correlation Between Income and Crime Rate",
caption = "Graphic by Natalie Adams")
plot(gg)
# scatterplot of median household income data and crime rates for Baltimore neighborhoods in 2020
gg <- ggplot(main, aes(x=mhhi20, y=crime20)) +
geom_point(aes(col=mhhi20)) +
geom_smooth(method="loess", se=F) +
xlim(c(0, 135000)) +
ylim(c(0, 135)) +
labs(subtitle="Baltimore, Maryland 2020",
y="Crime Rate",
x="Median Household Income",
title="Correlation Between Median Household Income and Crime Rate",
caption = "Graphic by Natalie Adams")
plot(gg)
# scatterplot of median household income data and crime rates for Baltimore neighborhoods in 2020
gg <- ggplot(main, aes(x=mhhi20, y=crime20)) +
geom_point(aes(col=mhhi20)) +
geom_smooth(method="loess", se=F) +
xlim(c(0, 135000)) +
ylim(c(0, 135)) +
labs(subtitle="Baltimore, Maryland 2020",
y="Crime Rate",
x="Median Household Income",
title="Median Household Income and Crime Rate",
caption = "Graphic by Natalie Adams")
plot(gg)
# Turn off scientific notation
options(scipen=999)
# Load the tidyverse and janitor
library(tidyverse)
library(janitor)
library(ggplot2)
View(low_income_high_crime)
# Turn off scientific notation
options(scipen=999)
# Load the tidyverse and janitor
library(tidyverse)
library(janitor)
library(ggplot2)
# Median household income for Baltimore neighborhoods from 2010 to 2020
med_income <- read_csv("Median_Household_Income.csv")
# Crime rate data for Baltimore neighborhoods from 2010 to 2020
crime <- read_csv("Crime_Rate.csv")
# 15 neighborhoods with the lowest median household income  in 2020
med_income_2020 <- med_income %>%
select(CSA2020, mhhi20) %>%
arrange(desc(mhhi20)) %>%
slice_min(mhhi20, n=15)
# Turn off scientific notation
options(scipen=999)
# Load the tidyverse and janitor
library(tidyverse)
library(janitor)
library(ggplot2)
# Median household income for Baltimore neighborhoods from 2010 to 2020
med_income <- read_csv("Median_Household_Income.csv")
# Crime rate data for Baltimore neighborhoods from 2010 to 2020
crime <- read_csv("Crime_Rate.csv")
# 15 neighborhoods with the lowest median household income  in 2020
med_income_2020 <- med_income %>%
select(CSA2020, mhhi20) %>%
arrange(desc(mhhi20)) %>%
slice_min(mhhi20, n=15)
# 15 neighborhoods with the highest crime rate in 2020
crime_2020 <- crime %>%
select(CSA2020, crime20) %>%
arrange(desc(crime20)) %>%
slice_max(crime20, n=15)
# Neighborhoods that are in both the 15 neighborhoods with the lowest median household income and 15 neighborhoods with the highest crime rate in 2020
top_low_income_high_crime <- med_income_2020 %>%
inner_join(crime_2020, by="CSA2020")
View(med_income_2020)
# turn off scientific notation
options(scipen=999)
# load janitor and tidyverse
library(janitor)
library(tidyverse)
# library(ggplot2)
# food stores in maryland
stores <- read.csv("food_stores.csv")
# median household income by baltimore neighborhood
income <- read.csv("median_household_income.csv")
# total population by baltimore neighborhood
total_pop1 <- read.csv("total_population.csv")
# white population by baltimore neighborhood
percent_white1 <- read.csv("percent_white.csv")
# black population by baltimore neighborhood
percent_black1 <- read.csv("percent_black.csv")
# hispanic population by baltimore neighborhood
percent_hispanic1 <- read.csv("percent_hispanic.csv")
# asian population by baltimore neighborhood
percent_asian1 <- read.csv("percent_asian.csv")
# other race population by baltimore neighborhood
percent_other1 <- read.csv("percent_other.csv")
# two or more races population by baltimore neighborhood
percent_more1 <- read.csv("percent_two_or_more.csv")
# total population by baltimore neighborhood clean
total_pop2 <- total_pop1 %>%
select(CSA2010, tpop20) %>%
clean_names() %>%
rename(neighborhood = 1, total_pop_2020 = 2)
# white population by baltimore neighborhood clean
percent_white2 <- percent_white1 %>%
select(CSA2010, pwhite20) %>%
clean_names() %>%
rename(neighborhood = 1, percent_white = 2)
# black population by baltimore neighborhood clean
percent_black2 <- percent_black1 %>%
select(CSA2010, paa20) %>%
clean_names() %>%
rename(neighborhood = 1, percent_black = 2)
# hispanic population by baltimore neighborhood clean
percent_hispanic2 <- percent_hispanic1 %>%
select(CSA2010, phisp20) %>%
clean_names() %>%
rename(neighborhood = 1, percent_hispanic = 2)
# asian population by baltimore neighborhood clean
percent_asian2 <- percent_asian1 %>%
select(CSA2010, pasi20) %>%
clean_names() %>%
rename(neighborhood = 1, percent_asian = 2)
# other race population by baltimore neighborhood clean
percent_other2 <- percent_other1 %>%
select(CSA2010, ppac20) %>%
clean_names() %>%
rename(neighborhood = 1, percent_other = 2)
# two or more races population by baltimore neighborhood clean
percent_more2 <- percent_more1 %>%
select(CSA2010, p2more20) %>%
clean_names() %>%
rename(neighborhood = 1, percent_two_or_more = 2)
# total baltimore population by race and baltimore neighborhood clean
baltimore_population <- total_pop2 %>%
inner_join(percent_white2, by="neighborhood") %>%
inner_join(percent_black2, by="neighborhood") %>%
inner_join(percent_hispanic2, by="neighborhood") %>%
inner_join(percent_asian2, by="neighborhood") %>%
inner_join(percent_other2, by="neighborhood") %>%
inner_join(percent_more2, by="neighborhood")
# baltimore stores
baltimore_stores <- stores %>%
select(Main_Categ, Company_Na, County, Address, ZIP_Code, X, Y) %>%
filter(County == "Baltimore City") %>%
clean_names() %>%
rename(store_type = 1, name = 2)
# baltimore supermarkets
supermarkets <- baltimore_stores %>%
filter(store_type == "Supermarket")
# baltimore small grocery stores
small_grocery <- baltimore_stores %>%
filter(store_type == "Small Grocery/Corner Store")
# baltimore convenience stores
convenience_stores <- baltimore_stores %>%
filter(store_type == "Convenience Store")
# median household income by baltimore neighborhood clean
baltimore_income <- income %>%
select(CSA2020, mhhi20) %>%
clean_names() %>%
rename(neighborhood = 1, median_income = 2)
View(income)
View(baltimore_income)
